### Basic: eGTK by Daniel Fore <Daniel.P.Fore@gmail.com> ###
### Finestly-Yin by Oliver Scholtz ###
# License: GPL
# Feel free to modify and share!

gtk-color-scheme = "base_color:#c8c8c8\nfg_color:#cacaca\nbg_color:#373534\ntooltip_fg_color:#000000\ntooltip_bg_color:#999999\nselected_bg_color:#444240\nselected_fg_color:#f5f5f5\ntext_color:#121212\npanel_color:#161616\nhuman_color:#d2aa00"

gtk-menu-popup-delay	= 1 # Makes menus pop up faster! Set to 1 instead of 0 to avoid any bugs.

style "murrine-default"
{
	xthickness = 1
	ythickness = 1

  # Button
  GtkButton	::child-displacement-x			= 0
  GtkButton	::child-displacement-y			= 1
  GtkButton	::default_border			= { 0, 0, 0, 0 }
  GtkButton	::inner-border				= { 3, 3, 3, 3 }
  GtkButton	::image-spacing			= 2
  GtkCheckButton::indicator-size			= 14
  GtkCheckButton::indicator-spacing			= 1

  # Entry
  GtkEntry::honors-transparent-bg-hint			= 1

  # Range
  GtkRange	::activate-slide			= 0
  GtkRange	::arrow-displacement-x			= 0
  GtkRange	::arrow-displacement-y			= 0
  GtkRange	::arrow-scaling			= 0.5
  GtkRange	::slider-width				= 11
  GtkRange	::stepper-size				= 11
  GtkRange	::stepper-spacing			= 0
  GtkRange	::trough-border			= 3
  GtkRange	::trough-side-details			= 0
  GtkRange	::trough-under-steppers		= 1

  # Scrollbar
  GtkScrollbar	::fixed-slider-length			= 0
  GtkScrollbar	::has-backward-stepper			= 1
  GtkScrollbar	::has-forward-stepper			= 1
  GtkScrollbar	::has-secondary-backward-stepper	= 0
  GtkScrollbar	::has-secondary-forward-stepper	= 0
  GtkScrollbar	::min-slider-length			= 30

  # Scale
  GtkScale	::slider-length			= 20
  GtkScale	::slider-width				= 11
  GtkScale	::value-spacing			= 2
  GtkScale	::trough-side-details			= 1
  GtkScale	::trough-border			= 3

  # Notebook
  GtkNotebook	::arrow-spacing			= 0
  GtkNotebook	::has-backward-stepper			= 1
  GtkNotebook	::has-forward-stepper			= 1
  GtkNotebook	::has-secondary-backward-stepper	= 0
  GtkNotebook	::has-secondary-forward-stepper	= 0
  GtkNotebook	::tab-curvature			= 1
  GtkNotebook	::tab-overlap				= 2

  # MenuBar
  GtkMenuBar	::shadow-type				= 1
  GtkMenuBar    ::internal-padding			= 0
  
  # Toolbar
  GtkToolbar	::shadow-type				= 3
  GtkMenuBar    ::internal-padding			= 0
  
  # Widget
  GtkWidget	::focus-line-width			= 0

  #Others
  GtkPaned	::handle_size				= 1

  # Links
  GtkWidget	::link-color				= "#008eff"
  GtkWidget	::visited-link-color			= "#6e6e6e"
  GtkHTML	::link_color				= "#6e6e6e"
  GtkHTML	::alink_color				= "#008eff"
  GtkHTML	::vlink_color				= "#6e6e6e"
  GnomeHref	::link_color				= "#008eff"
  GtkIMHtml	::hyperlink-color			= "#008eff"
  GtkIMHtml	::hyperlink-prelight-color		= "#6e6e6e"

 	fg[NORMAL]		= @selected_fg_color
	fg[PRELIGHT]		= @text_color
	fg[SELECTED]		= shade (0.86, @fg_color)
	fg[ACTIVE]		= shade (0.86, @fg_color)
	fg[INSENSITIVE]	= shade (0.60, @fg_color)

	bg[NORMAL]		= @bg_color
	bg[PRELIGHT]		= shade (0.90, @human_color)
	bg[SELECTED]		= @selected_bg_color
	bg[ACTIVE]		= shade (1.08, @bg_color)
	bg[INSENSITIVE]	= shade (0.90, @bg_color)

	base[NORMAL]		= @base_color
	base[PRELIGHT]		= shade (1.08, @base_color)
	base[SELECTED]		= shade (0.60, @base_color)
	base[ACTIVE]		= shade (0.80, @base_color)
	base[INSENSITIVE]	= darker (@base_color)

	text[NORMAL]		= @text_color
	text[PRELIGHT]		= @text_color
	text[SELECTED]		= @text_color
	text[ACTIVE]		= @text_color
	text[INSENSITIVE]	= shade (0.60, @fg_color)

	engine "murrine" 
	{
	animation           = TRUE
	contrast            = 1.10  # 0.8 for less contrast, more than 1.0 for more contrast on borders
	glazestyle          = 0     # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
	gradient_shades     = {1.15,1.05,1.04,0.9} # default: {1.1,1.0,1.0,1.1}
	gradients           = TRUE  # FALSE = disabled, TRUE = enabled
	glowstyle	    = 4
	highlight_shade     = 1.0   #0.97  # set highlight amount for buttons or widgets
	lightborder_shade   = 1.0   # sets lightborder amount for buttons or widgets
	lightborderstyle    = 0     # 0 = lightborder on top side, 1 = lightborder on all sides
	listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
	listviewstyle       = 1     # 0 = nothing, 1 = dotted
	menubaritemstyle    = 0     # 0 = menuitem look, 1 = button look
	menubarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
	menuitemstyle       = 0     # 0 = flat, 1 = glassy, 2 = striped
	menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
	reliefstyle	    = 1     # 0 = flat, 1 = inset, 2 = shadow
	rgba		    = TRUE  # FALSE = disabled, TRUE = enabled
	roundness           = 2     # 0 = squared, 1 = old default, more will increase roundness
	scrollbarstyle      = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
	sliderstyle         = 0     # 0 = nothing added, 1 = handles
	stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = unknown
	toolbarstyle	    = 2    # 0 = flat, 1 = glassy, 2 = gradient
	}
}

style "murrine-thin"
{
	xthickness = 0
	ythickness = 0
}

style "murrine-wide"
{
	xthickness = 2
	ythickness = 2
}

style "murrine-wider"
{
	xthickness = 3
	ythickness = 3
}

style "murrine-button"
{
	xthickness = 1
	ythickness = 1

	text[NORMAL]		= @selected_fg_color
	text[SELECTED]		= shade (0.86, @fg_color)
	text[ACTIVE]		= shade (0.86, @fg_color)

	bg[NORMAL]      	= mix (0.93, shade (1.16, @bg_color), shade (0.96, @selected_bg_color))
	bg[PRELIGHT]    	= shade (0.90, @human_color)
	bg[ACTIVE]      	= shade (0.80, @bg_color)
	bg[INSENSITIVE] 	= shade (0.90, @bg_color)
	base[NORMAL]		= shade (1.08, @bg_color)
	
	engine "murrine"
	{
	contrast		= 1.30
	lightborder_shade	= 1.50
	gradient_shades		= {1.15,1.07,1.0185,0.885}
	gradients		= TRUE
	}
}

style "murrine-entry" = "murrine-wider"
{
	engine "murrine" 
	{
	contrast            	= 1.10
	}
}

style "murrine-notebook" = "murrine-wide"
{
  fg[ACTIVE]	= shade (0.80, @fg_color)
  bg[NORMAL]	= @bg_color # !
  bg[ACTIVE]	= shade (0.90, @bg_color)

	engine "murrine" 
	{
	contrast		= 1.30
	lightborder_shade	= 1.30
	}
}

style "murrine-tasklist"
{
}

style "murrine-menu" = "murrine-wide"
{
	bg[NORMAL]		= shade (0.80, @bg_color)
	fg[SELECTED]		= @bg_color

	engine "murrine"
	{
	highlight_shade		= 1.0
	roundness		= 1
	}
}

style "murrine-menu-item" = "murrine-default"
{
	text[NORMAL]		= @selected_fg_color
	text[PRELIGHT]		= @selected_fg_color
	fg[NORMAL]		= shade (0.86, @fg_color)
	fg[PRELIGHT]		= @selected_fg_color
	fg[INSENSITIVE]	= shade (0.60, @fg_color)
}

style "murrine-separator-menu-item"
{
    	engine "pixmap" 
	{
	image 
	{
       	function        = HLINE
	file            = "Menu/menu-line.png"
	stretch         = TRUE
	recolorable     = TRUE
	}
	}
}

style "murrine-treeview" = "murrine-default"
{
	base[ACTIVE]		= shade (1.96, @selected_bg_color)
	base[SELECTED]		= @human_color
	text[SELECTED]		= @text_color
	text[ACTIVE]		= @text_color
}

style "murrine-treeview-header" = "murrine-default"
{
	bg[NORMAL]      	= shade (0.96, @bg_color)
	bg[PRELIGHT]    	= shade (1.40, @bg_color)
	bg[ACTIVE]      	= shade (0.92, @bg_color)

	engine "murrine"
	{
	contrast		= 1.30
	gradient_shades		= {1.15,1.07,1.0185,0.885}
	gradients		= TRUE
	}
}

style "murrine-frame-title"
{
}

style "murrine-tooltips" = "murrine-wider"
{
	bg[NORMAL]		= @tooltip_bg_color
	fg[NORMAL]		= @tooltip_fg_color

	engine "murrine" #from Wasp
	{
	gradient_shades		= {1.150, 1.000, 1.000, 0.850}
	highlight_shade		= 0.909090
	glow_shade		= 1.22
	glowstyle		= 4
	}
}

style "murrine-progressbar" = "murrine-thin"
{
	engine "murrine"
	{
	contrast		= 1.30
	roundness		= 2
	lightborder_shade	= 1.00
	lightborderstyle	= 2	
	}
}

style "murrine-toolbar" = "murrine-wider" 
{
	fg[NORMAL]      	= @selected_fg_color
	fg[PRELIGHT]    	= @text_color
	fg[SELECTED]      	= shade (0.86, @fg_color)
	fg[ACTIVE]      	= shade (0.86, @fg_color)
	fg[INSENSITIVE]	= shade (0.60, @fg_color)

	engine "murrine" 
	{
	contrast		= 1.10
	}
}

style "murrine-statusbar"
{
	xthickness		= 6
	ythickness		= 2
	fg[NORMAL]		= shade (0.86, @fg_color)
}

style "murrine-comboboxentry" = "murrine-button"
{
	xthickness = 3
	ythickness = 3

	text[SELECTED]		= @text_color
	text[ACTIVE]		= @text_color
}

style "murrine-spinbutton" = "murrine-button"
{
	xthickness = 3
	ythickness = 3

	text[SELECTED]		= @text_color
	text[ACTIVE]		= @text_color
}

style "murrine-scale"
{
	engine "murrine" 
	{
	roundness		= 2
	}
}

style "murrine-hscale"
{
}

style "murrine-vscale"
{
}

style "murrine-scrollbar"
{
	engine "murrine"
	{
	colorize_scrollbar  	= TRUE
	contrast 		= 1.40
	roundness		= 2
	}
}

style "murrine-hscrollbar"
{
	fg[PRELIGHT]		= shade (1.80, @bg_color)
	fg[INSENSITIVE]	= shade (2.00, @bg_color)
	bg[SELECTED]		= @bg_color
	engine "murrine"
	{
	contrast 		= 1.30
	}
}

style "murrine-vscrollbar"
{
	fg[PRELIGHT]		= shade (1.80, @bg_color)
	fg[INSENSITIVE]	= shade (2.00, @bg_color)
	bg[SELECTED]		= @bg_color

	engine "murrine"
	{
	contrast 		= 1.30
	}
}

style "murrine-menubar"
{
}

style "murrine-nautilus-location"
{
}

style "murrine-radiocheck" = "murrine-default"
{
  bg[SELECTED]	= darker (@selected_bg_color)		# hover and selection
  base[NORMAL]	= shade (0.96, @bg_color)		# enabled background
}

####################### Nautilus #######################

style "nautilus-sidebar" = "murrine-treeview"
{
	xthickness = 0
	ythickness = 0

	text[NORMAL]		= @fg_color
	base[NORMAL]		= shade (1.05, @bg_color)

	GtkPaned	::handle_size			= 0
	GtkWidget	::wide_separator		= 0
	GtkWidget	::separator_width		= 0
	GtkWidget	::separator_height		= 0
	GtkWidget	::focus_line_width		= 0
	GtkWidget	::draw_border			= {0, 0, 0, 0}

      # these make the padding from left window edge a little more sane
	GtkTreeView	::vertical_separator		= 6
	GtkTreeView	::horizontal_separator		= 16
	GtkTreeView	::indent-expanders		= 1 # 1 means TRUE
	GtkTreeView	::expander-size		= 6
	GtkExpander	::expander_spacing		= 16
	GtkButton	::image_spacing		= 4
}

style "nautilus-view"
{
	xthickness		= 0
	ythickness		= 0

	text[NORMAL]      	= @selected_fg_color
	text[PRELIGHT]      	= @text_color
	base[NORMAL]    	= shade (0.96, @bg_color)
	base[INSENSITIVE]    	= shade (0.86, @bg_color)
}

style "nautilus-sidebar-title"
{
	fg[NORMAL]	        = shade (0.86, @fg_color)

	stock["gtk-close"] = {{ "Others/null.png", *, *, * }} # Get rid of the close icon

	xthickness = 1
	ythickness = 1

	GtkExpander::expander_spacing             = 0
        GtkArrow::arrow-scaling                   = 0.6 # allowed: 0.1 ~ 1.0
        GtkButton::image-spacing                  = 0
        GtkButton::inner-border                   = {3, 3, 3, 3}
	GtkButton::child-displacement-x           = 0
	GtkButton::child-displacement-y           = 0
	GtkButton::default-border                 = {0, 0, 0, 0}

	engine "murrine"
	{
	contrast 		= 1.20 # !
	}
}

style "nautilus-window-base"
{
	bg[NORMAL]		= @bg_color
}

style "nautilus-menu" = "murrine-wide"
{
	fg[NORMAL]		= shade (0.86, @fg_color)
	fg[PRELIGHT]		= @selected_fg_color

	engine "murrine"
	{
	glazestyle		= 0
	highlight_shade		= 1.00
	roundness		= 2 
	}
}

style "nautilus-handle"
{
	GtkPaned::handle-size   = 1
	
	engine "pixmap"
	{
	image # for the thin gray line separating the sidepane and viewpane
	{
	function		= HANDLE
	file			= "Handles/handle-nautilus.png"
	stretch			= TRUE
	recolorable		= TRUE
	border 			= { 0, 0, 0, 0 }
	}
	}
}

style "nautilus-statusbar" = "murrine-default"
{
	xthickness		= 6
	ythickness		= 2
	fg[NORMAL]		= shade (0.85, @fg_color)
}

style "smaller-text"
{
}

style "handle"
{
}

###################### GNOME PANEL ######################

style "finestly-panel"
{
	bg[NORMAL]		= @panel_color
	bg[SELECTED]		= @human_color
	bg[ACTIVE]      	= @bg_color

	engine "murrine"
	{
	contrast		= 1.40
	highlight_shade 	= 1.40
	roundness		= 2
	gradients		= FALSE
	glazestyle		= 0
	}
}

style "finestly-panel-light"
{	
}

style "finestly-panel-text"
{
	fg[NORMAL]		= shade (0.80, @fg_color)
	fg[PRELIGHT]		= @text_color
	fg[ACTIVE]		= @selected_fg_color
}

style "finestly-main-menu-text" = "finestly-panel-text"
{
}

style "bold-panel-menu"
{
	font_name = "Bold"
}


widget "*Panel*slab-main-menu-panel-button*" style "bold-panel-menu"
widget "*gimmie*"			style "bold-panel-menu"
widget "*Panel*MenuBar*"			style "bold-panel-menu"


###########
# Matches #
###########

# theme radio buttons and checkmarks
class "GtkRadio*"			style "murrine-radiocheck"
class "GtkCheck*"			style "murrine-radiocheck"

# theme default style is applied to every widget
class "GtkWidget"			style "murrine-default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"			style "murrine-toolbar" 
class "GtkRange"				style "murrine-wide"
class "GtkFrame"				style "murrine-wide"
class "GtkSeparator"			style "murrine-wide"
class "GtkEntry"				style "murrine-entry"

class "GtkSpinButton"			style "murrine-spinbutton"
class "GtkScale"				style "murrine-scale"
class "GtkVScale"			style "murrine-vscale"
class "GtkHScale"			style "murrine-hscale"
class "GtkVScrollbar"			style "murrine-vscrollbar"
class "GtkHScrollbar"			style "murrine-hscrollbar"

# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

# This is not perfect, it could be done better
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>"     style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"  style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLabel>"  	style "murrine-notebook"

widget_class "*<GtkButton>"      		style "murrine-button"
widget_class "*<GtkNotebook>"    		style "murrine-notebook"
widget_class "*<GtkStatusbar>*"  		style "murrine-statusbar"

widget_class "*<GtkComboBoxEntry>*"	style "murrine-comboboxentry"
widget_class "*<GtkComboBox>*"		style "murrine-comboboxentry"

widget_class "*GtkTable*<GtkButton>*"	style "murrine-button"

widget_class "*<GtkMenuBar>*"           	style "murrine-menubar"
widget_class "*<GtkMenu>*"              	style "murrine-menu"
widget_class "*<GtkMenuItem>*"          	style "murrine-menu-item"
widget_class "*<GtkSeparatorMenuItem>*" 	style "murrine-separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>"	style "murrine-frame-title"
widget_class "*.<GtkTreeView>*"		style "murrine-treeview"

widget_class "*<GtkProgressBar>"		style "murrine-progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>"	style "murrine-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"	style "murrine-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"	style "murrine-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"	style "murrine-treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    	style "murrine-treeview-header"
widget_class "*.ETree.ECanvas"    	style "murrine-treeview-header"

widget_class "*ToolButton*"		style "smaller-text"
widget_class "*Statusbar*"		style "smaller-text"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" 			style "murrine-tooltips"

############################################
# NAUTILUS
# Order of assignment is important
#############################################

widget_class "*Nautilus*Window*"		style "nautilus-window-base"
widget_class "*Nautilus*Toolbar*"		style "murrine-toolbar"
widget_class "*Nautilus*Toolbar*Button"	style "murrine-button"
widget_class "*Nautilus*Menu*"		style "nautilus-menu"
widget_class "*Nautilus*Statusbar*"	style "nautilus-statusbar"
widget "*Nautilus*Splitter"		style "nautilus-handle"
widget_class "*Nautilus*View*"		style "nautilus-view"
widget_class "*NautilusSidePane.*"	style "nautilus-sidebar-title"
widget_class "*Nautilus*Places*Sidebar*"	style "nautilus-sidebar"
widget_class "*Nautilus*Side*.GtkWidget"	style "nautilus-sidebar"
widget_class "*Nautilus*Side*Title*"	style "nautilus-sidebar-title"
widget_class "*Nautilus*Notebook"		style "murrine-notebook"

##################################
# Gnome Panel
##################################
widget "*PanelWidget*"			style "finestly-panel"
widget "*PanelApplet*"			style "finestly-panel"
widget "*fast-user-switch*"		style "finestly-panel"
widget "*CPUFreq*Applet*"			style "finestly-panel"
widget "*indicator-applet*"		style "finestly-panel"
class "PanelApp*"			style "finestly-panel"
class "PanelToplevel*"			style "finestly-panel"
widget_class "*PanelToplevel*"		style "finestly-panel"
widget_class "*notif*"			style "finestly-panel"
widget_class "*Notif*"			style "finestly-panel"
widget_class "*Tray*"			style "finestly-panel" 
widget_class "*tray*"			style "finestly-panel"
widget_class "*computertemp*"		style "finestly-panel"
widget_class "*Applet*Tomboy*"		style "finestly-panel"
widget_class "*Applet*Netstatus*"		style "finestly-panel"

# Fixes for tooltip text in some apps.
widget_class "*Notif*Beagle*"		style "finestly-panel-light"
widget_class "*Notif*Brasero*"		style "finestly-panel-light"

# XFCE panel theming.
widget "*Xfce*Panel*"			style "finestly-panel"
class "*Xfce*Panel*"			style "finestly-panel"

# Make sure panel text color doesn't change
# widget_class "*Panel*MenuBar*"		style "finestly-main-menu-text"
widget_class "*Panel*<GtkMenuBar>*"	style "finestly-main-menu-text"
widget "*.clock-applet-button.*"		style "finestly-panel-text"
widget "*PanelApplet*"			style "finestly-panel-text"
